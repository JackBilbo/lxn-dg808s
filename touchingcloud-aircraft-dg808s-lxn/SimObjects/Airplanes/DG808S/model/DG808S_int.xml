<?xml version="1.0" encoding="utf-8" ?>
<ModelInfo>
	<LODS>
		<!-- Highest LOD -->
		<!-- minimum display size in % (should be bounding sphere vertical screen size, sphere will often be slightly larger than you expect) -->
		<!-- default minSize is 0 -->
		<LOD minSize="100" 	ModelFile="DG808S_interior_LOD00.gltf"/>
		<LOD minSize="0" 	ModelFile="DG808S_interior_LOD01.gltf"/>
	</LODS>
	
	<Behaviors>

		<Include ModelBehaviorFile="Asobo\Common.xml"/>
		<Include ModelBehaviorFile="Asobo\Airliner\AirlinerCommon.xml"/>
		<Include ModelBehaviorFile="Asobo\Airliner\Boeing.xml"/>
		<Include ModelBehaviorFile="Asobo\Airliner\FMC.xml"/>
		<Include ModelBehaviorFile="Asobo\NAVCOM\AS92.xml"/>

		<Component ID="GlassCockpit">
			<DefaultTemplateParameters>
				<ANIM_NEVER_FAILS/>
			</DefaultTemplateParameters>
			<!--<UseTemplate Name="ASOBO_AS21_Template"/>-->
			<UseTemplate Name="ASOBO_AS92_Template">
			</UseTemplate>
			<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
				<NODE_ID>COM_Screen</NODE_ID>
				<EMISSIVE_CODE>(A:ELECTRICAL MASTER BATTERY, bool) 0.5 *</EMISSIVE_CODE>
			</UseTemplate>			
		</Component>
		
		<Component ID="ENGINE">
			<Parameters Type="Override">
			</Parameters>		
			<UseTemplate Name="ASOBO_ENGINE_Lever_Throttle_Template">
				<ID>1</ID>
				<ANIM_NAME>THROTTLE_LEVER</ANIM_NAME>
				<NODE_ID>THROTTLE_LEVER</NODE_ID>
				<PART_ID>THROTTLE_LEVER</PART_ID>
				<AXIS>X</AXIS>
				<INTERACTION_TYPE>Lever</INTERACTION_TYPE>
			</UseTemplate>		
			<UseTemplate Name="ASOBO_SAFETY_Indicator_Template">
				<NODE_ID>ENG_SCREEN</NODE_ID>
				<EMISSIVE_CODE>(A:GENERAL ENG STARTER:1, percent) 0 != (A:ENG COMBUSTION:1, percent) 0 != or (A:ELECTRICAL MASTER BATTERY, bool) and 0.5 *</EMISSIVE_CODE>
			</UseTemplate>
		</Component>	
		
				
		<Component ID="Electrical_Panel">
			<UseTemplate Name="ASOBO_LIGHTING_Switch_Light_Landing_Template">
				<ANIM_NAME>switch_light</ANIM_NAME>
				<NODE_ID>switch_light</NODE_ID>
				<WWISE_EVENT_1></WWISE_EVENT_1>
				<WWISE_EVENT_2></WWISE_EVENT_2>
				<LEFT_SINGLE_CODE>(A:LIGHT LANDING,bool) (&gt;A:LIGHT STROBE,bool)</LEFT_SINGLE_CODE>
			</UseTemplate>

			<UseTemplate Name="ASOBO_ELECTRICAL_Switch_Battery_Master_Template">
				<ANIM_NAME>switch_master_battery</ANIM_NAME>
				<NODE_ID>switch_master_battery</NODE_ID>
				<Cursor>Hand</Cursor>
				<HelpID>HELPID_GAUGE_BATTERY_SWITCH</HelpID>
				<TooltipID>TOOLTIPTEXT_BATTERY_SWITCH</TooltipID>				
				<LEFT_SINGLE_CODE>0 (&gt;L:CANOPY_EJECT, percent) 100 0 (&gt;A:INTERACTIVE POINT GOAL, percent) (&gt;K:TOGGLE_MASTER_BATTERY)</LEFT_SINGLE_CODE>
				<WWISE_EVENT_1>battery_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>battery_switch_off</WWISE_EVENT_2>
				<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
				<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>
			</UseTemplate>
		</Component>

		<Component ID="LIGHTING_Panel">
			<UseTemplate Name="ASOBO_LIGHTING_Knob_Glareshield_Template">
				 <NODE_ID>LIGHTING_Knob_Glareshield</NODE_ID>
				 <ANIM_NAME>LIGHTING_Knob_Glareshield</ANIM_NAME>
				<POTENTIOMETER>5</POTENTIOMETER>
				<KNOB_EMISSIVE_CODE>0.1</KNOB_EMISSIVE_CODE>
				<WWISE_EVENT>as3x_inner_knob</WWISE_EVENT>
				<TT_DESCRIPTION_ID>@TT_Package.LIGHTING_KNOB_GLARESHIELD_ACTION</TT_DESCRIPTION_ID>
				<TOOLTIP_TITLE>@TT_Package.LIGHTING_KNOB_GLARESHIELD_TITLE</TOOLTIP_TITLE>
			</UseTemplate>
			<UseTemplate Name="ASOBO_LIGHTING_Glareshield_Emissive_Template">
				<NODE_ID>LIGHT_GLARESHIELD_1</NODE_ID>
				<POTENTIOMETER>5</POTENTIOMETER>
			</UseTemplate>
			<UseTemplate Name="ASOBO_LIGHTING_Glareshield_Emissive_Template">
				<NODE_ID>LIGHT_GLARESHIELD_2</NODE_ID>
				<POTENTIOMETER>5</POTENTIOMETER>
			</UseTemplate>
			<UseTemplate Name="ASOBO_LIGHTING_Glareshield_Emissive_Template">
				<NODE_ID>LIGHT_GLARESHIELD_3</NODE_ID>
				<POTENTIOMETER>5</POTENTIOMETER>
			</UseTemplate>
		</Component>

		<Component ID="SMOKE_SWITCH" Node="switch_smoke">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>switch_smoke</ANIM_NAME>
				<ANIM_CODE>(A:FUEL DUMP ACTIVE, percent)</ANIM_CODE>
				<ANIMTIP_0>Enable aerobatics smoke</ANIMTIP_0>
				<ANIMTIP_1>Disable aerobatics smoke</ANIMTIP_1>
				<WWISE_EVENT_1>landing_light_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>landing_light_switch_off</WWISE_EVENT_2>
				<LEFT_SINGLE_CODE>(&gt;K:FUEL_DUMP_TOGGLE)</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>
		
		<Component ID="FLARM_SWITCH" Node="FLARM_BOX">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>FLARM_BOX</ANIM_NAME>
				<ANIM_CODE>(A:LIGHT TAXI ON, percent)</ANIM_CODE>
				<ANIMTIP_0>Enable FLARM</ANIMTIP_0>
				<ANIMTIP_1>disable FLARM</ANIMTIP_1>
				<WWISE_EVENT_1>landing_light_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>landing_light_switch_off</WWISE_EVENT_2>
				<LEFT_SINGLE_CODE>(&gt;K:TOGGLE_TAXI_LIGHTS)</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>
		
		<Component ID="YAWSTRING_SWITCH" Node="YAWROOT">
			<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
				<ANIM_NAME>YAWROOT</ANIM_NAME>
				<ANIM_CODE>(L:YAWSTRING_TOGGLE, percent)</ANIM_CODE>
				<ANIMTIP_0>Hide yawstring</ANIMTIP_0>
				<ANIMTIP_1>Show yawstring</ANIMTIP_1>
				<CLOCKWISE_CODE>(L:YAWSTRING_TOGGLE, bool) ! (&gt;L:YAWSTRING_TOGGLE, bool)</CLOCKWISE_CODE>
				<ANTICLOCKWISE_CODE>(L:WINDSTRING_TOGGLE, bool) ! (&gt;L:WINDSTRING_TOGGLE, bool)</ANTICLOCKWISE>		
			</UseTemplate>
		</Component>
		
		<Component ID="DUMP_SWITCH" Node="lever_water_ballast">
			<UseTemplate Name="ASOBO_LIGHTING_Light_Base_Template">
				<IE_NAME>lever_water_ballast</IE_NAME>
				<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
				<POTENTIOMETER>15</POTENTIOMETER>
				<NODE_ID>lever_water_ballast</NODE_ID>
				<ANIM_NAME>lever_water_ballast</ANIM_NAME>
				<WWISE_PREFIX>lighting</WWISE_PREFIX>
				<ANIM_CODE>(A:LIGHT POTENTIOMETER:15, percent)</ANIM_CODE>
				<TOOLTIP_TITLE></TOOLTIP_TITLE>
				<TT_DESCRIPTION_ID></TT_DESCRIPTION_ID>				
				<TooltipID>Ballast valve %((A:PAYLOAD STATION WEIGHT:5, pounds) (A:PAYLOAD STATION WEIGHT:6, pounds) + int)%!s!lbs</TooltipID>				
				<INTERACTION_AXIS>Z</INTERACTION_AXIS>
				<DRAG_SPEED>1</DRAG_SCALAR>
				<DRAG_AXIS_SCALE>1</DRAG_AXIS_SCALE>
				<DRAG_SCALAR>1</DRAG_SCALAR>
				<THRESHOLD_MOUSE>0.005</THRESHOLD_MOUSE>
				<THRESHOLD_INPUT>0.1</THRESHOLD_INPUT>
				<CLOCKWISE_CODE>
					15 (&gt;K:LIGHT_POTENTIOMETER_DEC)
					15 (&gt;K:LIGHT_POTENTIOMETER_DEC)
					15 (&gt;K:LIGHT_POTENTIOMETER_DEC)
					15 (&gt;K:LIGHT_POTENTIOMETER_DEC)
					15 (&gt;K:LIGHT_POTENTIOMETER_DEC)
					15 (&gt;K:LIGHT_POTENTIOMETER_DEC)
					15 (&gt;K:LIGHT_POTENTIOMETER_DEC)
					15 (&gt;K:LIGHT_POTENTIOMETER_DEC)
					15 (&gt;K:LIGHT_POTENTIOMETER_DEC)
				</CLOCKWISE_CODE>
				<ANTICLOCKWISE_CODE>
					15 (&gt;K:LIGHT_POTENTIOMETER_INC)
					15 (&gt;K:LIGHT_POTENTIOMETER_INC)
					15 (&gt;K:LIGHT_POTENTIOMETER_INC)
					15 (&gt;K:LIGHT_POTENTIOMETER_INC)
					15 (&gt;K:LIGHT_POTENTIOMETER_INC)
					15 (&gt;K:LIGHT_POTENTIOMETER_INC)
					15 (&gt;K:LIGHT_POTENTIOMETER_INC)
					15 (&gt;K:LIGHT_POTENTIOMETER_INC)
					15 (&gt;K:LIGHT_POTENTIOMETER_INC)
				</ANTICLOCKWISE_CODE>
			</UseTemplate>
		</Component>
		
		
		<Component ID="BARO_BUG_KNOB" Node="buttonBaroBug">
			<UseTemplate Name="ASOBO_GT_Knob_Infinite">
				<ANIM_NAME>buttonBaroBug</ANIM_NAME>
				<CLOCKWISE_CODE>(&gt;K:KOHLSMAN_INC)</CLOCKWISE_CODE>
				<ANTICLOCKWISE_CODE>(&gt;K:KOHLSMAN_DEC)</ANTICLOCKWISE_CODE>
				<WWISE_EVENT>as3x_inner_knob</WWISE_EVENT>
				<COUNT>18</COUNT>
			</UseTemplate>
		</Component>
		
		<Component ID="VARIO_TONE_KNOB">
			<UseTemplate Name="ASOBO_GT_Knob_Finite_Dummy">
				<KNOB_NAME>buttonVarioTone</KNOB_NAME>
				<WWISE_EVENT>as3x_inner_knob</WWISE_EVENT>
				<COUNT>5</COUNT>
				<KNOB_SPEED>20</KNOB_SPEED>
				
				<KNOB_POSITION_VAR>VARIO_TONE_ACTIVE</KNOB_POSITION_VAR>
				<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
				<KNOB_POSITION_VAR_UNIT>PERCENT</KNOB_POSITION_VAR_UNIT>

				<ANIMTIP_0>OFF</ANIMTIP_0>
				<ANIMTIP_1>Tone MUTE</ANIMTIP_1>
				<ANIMTIP_2>Tone volume 1</ANIMTIP_2>
				<ANIMTIP_3>Tone volume 2</ANIMTIP_3>
				<ANIMTIP_4>Tone volume 3</ANIMTIP_4>
				<ANIMTIP_5>Tone volume 4</ANIMTIP_5>
				
				<ANIMTIP_0_ON_PERCENT>0</ANIMTIP_0_ON_PERCENT>
				<ANIMTIP_1_ON_PERCENT>0.2</ANIMTIP_1_ON_PERCENT>
				<ANIMTIP_2_ON_PERCENT>0.4</ANIMTIP_2_ON_PERCENT>
				<ANIMTIP_3_ON_PERCENT>0.6</ANIMTIP_3_ON_PERCENT>
				<ANIMTIP_4_ON_PERCENT>0.8</ANIMTIP_4_ON_PERCENT>
				<ANIMTIP_5_ON_PERCENT>1</ANIMTIP_5_ON_PERCENT>

				<ANIM_LENGTH>100</ANIM_LENGTH>
				<ANIM_CODE>(L:VARIO_TONE_ACTIVE,percent) 2 /</ANIM_CODE>
			
			</UseTemplate>
		</Component>
		
		<Component ID="NAV_KNOB">
			<UseTemplate Name="ASOBO_GT_Knob_Finite_Dummy">
				<KNOB_NAME>navKnob</KNOB_NAME>
				<WWISE_EVENT>navcom_frequency_inner_knob</WWISE_EVENT>
				<COUNT>1</COUNT>
				<KNOB_SPEED>100</KNOB_SPEED>
				<ANIM_LAG>500</ANIM_LAG>
				
				<KNOB_POSITION_VAR>NAV_SCREEN</KNOB_POSITION_VAR>
				<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
				<KNOB_POSITION_VAR_UNIT>percent</KNOB_POSITION_VAR_UNIT>
				
				<ANIMTIP_0>NAV OFF</ANIMTIP_0>
				<ANIMTIP_1>NAV ON</ANIMTIP_1>
				
				<ANIMTIP_0_ON_PERCENT>0</ANIMTIP_0_ON_PERCENT>
				<ANIMTIP_1_ON_PERCENT>1</ANIMTIP_1_ON_PERCENT>
			</UseTemplate>
		</Component>
		
		<Component ID="VARIO_MODE_KNOB">
			<UseTemplate Name="ASOBO_GT_Knob_Finite_Dummy">
				<KNOB_NAME>buttonVarioMode</KNOB_NAME>
				<WWISE_EVENT>navcom_frequency_inner_knob</WWISE_EVENT>
				<COUNT>2</COUNT>
				<KNOB_SPEED>50</KNOB_SPEED>
				<ANIM_LAG>200</ANIM_LAG>
				
				<KNOB_POSITION_VAR>VARIO_MODE</KNOB_POSITION_VAR>
				<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
				<KNOB_POSITION_VAR_UNIT>percent</KNOB_POSITION_VAR_UNIT>

				<ANIMTIP_0>Vario mode "NETTO"</ANIMTIP_0>
				<ANIMTIP_1>Vario mode "AUTO"</ANIMTIP_1>
				<ANIMTIP_2>Vario mode "TOTAL ENERGY"</ANIMTIP_2>
				
				<ANIMTIP_0_ON_PERCENT>0</ANIMTIP_0_ON_PERCENT>
				<ANIMTIP_1_ON_PERCENT>0.5</ANIMTIP_1_ON_PERCENT>
				<ANIMTIP_2_ON_PERCENT>1</ANIMTIP_2_ON_PERCENT>
			</UseTemplate>
		</Component>
		
		<Component ID="MIC_SWITCH" Node="MIC_SWITCH">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>mic</ANIM_NAME>
				<ANIM_CODE>10 (Z:MIC_POSITION) 0.9 / +</ANIM_CODE>
				<ANIM_LAG>50</ANIM_LAG>
				<ANIMTIP_0>Call ground crew</ANIMTIP_0>
				<ANIMTIP_1></ANIMTIP_1>
				<LEFT_SINGLE_CODE>(Z:MIC_POSITION) 100 != 100 * (&gt;Z:MIC_POSITION)</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>

		<!-- TOW RELEASE HADLE -->
		<Component ID="TOW_RELEASE" Node="lever_tow_release">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>lever_tow_release</ANIM_NAME>
				<ANIM_CODE>(A:WATER RUDDER HANDLE POSITION, percent) 2 *</ANIM_CODE>
				<ANIM_LAG>500</ANIM_LAG>
				<ANIMTIP_0></ANIMTIP_0>
				<ANIMTIP_1>Release the rope</ANIMTIP_1>
				<WWISE_EVENT_1>parking_brake_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>parking_brake_switch_off</WWISE_EVENT_2>
				<LEFT_SINGLE_CODE>0 (&gt;A:WATER RUDDER HANDLE POSITION, percent)</LEFT_SINGLE_CODE>
				<WHEEL_DOWN_CODE>0 (&gt;A:WATER RUDDER HANDLE POSITION, percent)</WHEEL_DOWN_CODE>
			</UseTemplate>
		</Component>

		<Component ID="PILOT_TOGGLE" Node="PILOT_TOGGLE_INT">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>PILOT_TOGGLE_INT</ANIM_NAME>
				<ANIM_CODE>(L:PILOT_TOGGLE, percent)</ANIM_CODE>
				<ANIMTIP_0>Hide pilot</ANIMTIP_0>
				<ANIMTIP_1>Show pilot</ANIMTIP_1>
				<LEFT_SINGLE_CODE>(L:PILOT_TOGGLE, bool) ! (&gt;L:PILOT_TOGGLE, bool)</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>
		
		<Component ID="CANOPY_EJECT" Node="lever_canopy_eject">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>lever_canopy_eject</ANIM_NAME>
				<ANIM_CODE>(L:CANOPY_EJECT, percent) 100 *</ANIM_CODE>
				<ANIMTIP_0>!!! CANOPY EJECT !!!</ANIMTIP_0>
				<ANIMTIP_1>Abort ejection</ANIMTIP_1>
				<WWISE_EVENT_1>parking_brake_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>parking_brake_switch_off</WWISE_EVENT_2>
				<LEFT_SINGLE_CODE>(L:CANOPY_EJECT, percent) 0 != if{ 0 (&gt;L:CANOPY_EJECT, percent) } els{ 1 (&gt;L:CANOPY_EJECT, percent) }</LEFT_SINGLE_CODE>
				<ANIM_LAG>500</ANIM_LAG>
			</UseTemplate>
		</Component>		
  
		<Component ID="GEAR_HANDLE" Node="lever_landing_gear_handle">
			<UseTemplate Name="ASOBO_GT_Lever_DraggingYAxis_Code">
				<USE_TRAJECTORY_DRAG_MODE>True</USE_TRAJECTORY_DRAG_MODE>
				<ANIM_NAME>lever_landing_gear_handle</ANIM_NAME>
				<HELPID>HELPID_GAUGE_GEAR_LEVER</HELPID>
				<TOOLTIPID>TOOLTIPTEXT_GEAR_LEVER</TOOLTIPID>
				<UP_CODE>(&gt;K:GEAR_DOWN)</UP_CODE>
				<DOWN_CODE>(&gt;K:GEAR_UP)</DOWN_CODE>
				<ANIM_CODE>(A:GEAR HANDLE POSITION, bool) 100 *</ANIM_CODE>
				<WWISE_EVENT_1>parking_brake_switch_off</WWISE_EVENT_1>
				<WWISE_EVENT_2>parking_brake_switch_on</WWISE_EVENT_2>	
				<ANIM_LAG>100</ANIM_LAG>
				<INCREMENT>1</INCREMENT>
				<MOUSE_WHEEL_INCREMENT>1</MOUSE_WHEEL_INCREMENT>
				<STEPS_NUMBER>1</STEPS_NUMBER>
				<DRAG_AXIS_SCALE>1</DRAG_AXIS_SCALE>
			</UseTemplate>		
		</Component>
		
		<Component ID="SPOILER_HANDLE" Node="lever_speed_brake_handle">
			<UseTemplate Name="ASOBO_HANDLING_Lever_Spoilers_Template">
				<DRAG_ANIM_NAME>lever_speed_brake_handle</DRAG_ANIM_NAME>
				<WWISE_EVENT_1>parking_brake_switch_off</WWISE_EVENT_1>
				<WWISE_EVENT_2>parking_brake_switch_on</WWISE_EVENT_2>			
				<INCREMENT>50</INCREMENT>
				<MOUSE_WHEEL_INCREMENT>50</MOUSE_WHEEL_INCREMENT>
				<STEPS_NUMBER>50</STEPS_NUMBER>
				<DRAG_AXIS_SCALE>1</DRAG_AXIS_SCALE>
				<ANIM_NAME>lever_speed_brake_handle</ANIM_NAME>
				<ANIM_TRIGGER_COUNT>50</ANIM_TRIGGER_COUNT>
				<NODE_ID>lever_speed_brake_handle</NODE_ID>
				<PART_ID>lever_speed_brake_handle</PART_ID>
			</UseTemplate>
		</Component>
		
		<Component ID="FLAPS_HANDLE" Node="lever_flap_handle">
			<UseTemplate Name="ASOBO_HANDLING_Flaps_Lever_SubTemplate">
				<USE_TRAJECTORY_DRAG_MODE>True</USE_TRAJECTORY_DRAG_MODE>
				<DRAG_ANIM_NAME>lever_flap_handle</DRAG_ANIM_NAME>
				<INCREMENT>50</INCREMENT>
				<MOUSE_WHEEL_INCREMENT>50</MOUSE_WHEEL_INCREMENT>
				<ANIM_NAME>lever_flap_handle</ANIM_NAME>
				<ANIM_TRIGGER_COUNT>7</ANIM_TRIGGER_COUNT>
				<NODE_ID>lever_flap_handle</NODE_ID>
				<PART_ID>lever_flap_handle</PART_ID>
				<DRAG_AXIS_SCALE>10</DRAG_AXIS_SCALE>
				<STEPS_NUMBER>7</STEPS_NUMBER>
				<ANIM_LAG>50</ANIM_LAG>
				<ANIM_LENGTH>100</ANIM_LENGTH>
				<INTERACTION_AXIS>X</INTERACTION_AXIS>
			</UseTemplate>		
		</Component>
		
		<Component ID="VENT_HANDLE" Node="VENT_HANDLE">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>VENT_HANDLE</ANIM_NAME>
				<ANIM_CODE>(A:WINDSHIELD DEICE SWITCH, percent)</ANIM_CODE>
				<ANIMTIP_0>Opent vent valve</ANIMTIP_0>
				<ANIMTIP_1>Close vent valve</ANIMTIP_1>
				<WWISE_EVENT_1>parking_brake_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>parking_brake_switch_off</WWISE_EVENT_2>
				<LEFT_SINGLE_CODE>(&gt;K:WINDSHIELD_DEICE_TOGGLE)</LEFT_SINGLE_CODE>
				<ANIM_LAG>500</ANIM_LAG>
			</UseTemplate>
		</Component>				
		
		
		<Component ID="HANDLING_Yoke">
			<UseTemplate Name="ASOBO_HANDLING_Yoke_Hideable_Template"/>
			<!-- Secondary hider (at the base of the yoke) -->
			<UseTemplate Name="ASOBO_HANDLING_Yoke_Hider_Template">
				<NODE_ID>lever_stick_l_r_BOTTOM</NODE_ID>
				<ID>1</ID>
			</UseTemplate>
		</Component>
		
		<Component ID="Custom_code">
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>30</FREQUENCY>
				<UPDATE_CODE>
					(L:INIT, bool) !  if{
						(A:ON ANY RUNWAY, bool) (A:ENG N1 RPM:1, percent) 5 &lt; and if{
							(&gt;K:ENGINE_AUTO_SHUTDOWN)
						}
						1 (&gt;L:INIT, bool)
					}				
				
					(A:IS SLEW ACTIVE, bool) ! (A:ANIMATION DELTA TIME, seconds) 0 &gt; and (A:ANIMATION DELTA TIME, seconds) 1 &lt; and (&gt;L:SIM_ACTIVE, bool)
					
					(L:SIM_ACTIVE, bool) if{
						
						0 s5
						0 s6
						(A:LIGHT POTENTIOMETER:15, percent) 0 != (A:LIGHT RECOGNITION ON, Bool) and if{
							(A:PAYLOAD STATION WEIGHT:5, pounds) s8
							(A:PAYLOAD STATION WEIGHT:6, pounds) s9
							
							l8 0 &gt; if{
								0 l8 3 (A:ANIMATION DELTA TIME, seconds) * (A:LIGHT POTENTIOMETER:15, percent over 100) * - max (&gt;A:PAYLOAD STATION WEIGHT:5, pounds)
								100 l8 5 * min s5
							}
							
							l9 0 &gt; if{
								0 l9 3 (A:ANIMATION DELTA TIME, seconds) * (A:LIGHT POTENTIOMETER:15, percent over 100) * - max (&gt;A:PAYLOAD STATION WEIGHT:6, pounds)
								100 l9 5 * min s6
							}
						}
						
						5 (A:AIRSPEED INDICATED, meters per second) 5 / - (A:PLANE ALT ABOVE GROUND MINUS CG, meters) - 0 max
						10 / (A:INTERACTIVE POINT OPEN, percent) (L:CANOPY_EJECT, percent) max 100 / 0.25 pow 1 + *
						s7
						
						l5 (&gt;L:BALLAST_DUMP_LEFT, percent)
						l5 l7 * (&gt;L:BALLAST_SPLASH_LEFT, percent)
						l6 (&gt;L:BALLAST_DUMP_RIGHT, percent)
						l6 l7 * (&gt;L:BALLAST_SPLASH_RIGHT, percent)
						
						(A:PRESSURE ALTITUDE, meters) (L:LAST PRESSURE ALTITUDE, meters) - 
						(A:AIRSPEED TRUE, meters per second) 2 pow (L:LAST AIRSPEED TRUE, meters per second) 2 pow - 2 9.80665 * / +
						(A:ANIMATION DELTA TIME, seconds) / s15
						
						l15 10 &lt; l15 -10 &gt; and if{
							1 (A:ANIMATION DELTA TIME, seconds) - (L:TOTAL ENERGY, meters per second) * (A:ANIMATION DELTA TIME, seconds) l15 * +
							-10 max 10 min (&gt;L:TOTAL ENERGY, meters per second)
						}
						
						(A:FOLDING WING RIGHT PERCENT, meters per second) 0 == (A:FOLDING WING RIGHT PERCENT, meters per second) 20 &gt; or if{ 
							0.1 (&gt;A:FOLDING WING RIGHT PERCENT, meters per second)
						}

						(A:FOLDING WING RIGHT PERCENT, meters per second) 0.1 &gt; if{
						
							(A:VELOCITY BODY Y, meters per second) 
							(A:ACCELERATION BODY Y, meters per second) (A:ANIMATION DELTA TIME, seconds) * + 
							(A:FOLDING WING RIGHT PERCENT, meters per second) (A:ANIMATION DELTA TIME, seconds) 0.033 min * +
							(&gt;A:VELOCITY BODY Y, meters per second)

							(A:VELOCITY BODY Z, meters per second) 
							(A:ACCELERATION BODY Z, meters per second) (A:ANIMATION DELTA TIME, seconds) * + 
							(A:FOLDING WING RIGHT PERCENT, meters per second) 2 / (A:ANIMATION DELTA TIME, seconds) 0.033 min * +
							(&gt;A:VELOCITY BODY Z, meters per second)
							
							(A:ROTATION ACCELERATION BODY X, radians per second)
							(A:FOLDING WING RIGHT PERCENT, meters per second)
							0.17 (A:PLANE PITCH DEGREES, radians) (A:ROTATION VELOCITY BODY X, radians per second) + - 0 max 0.34 min * +
							(&gt;A:ROTATION ACCELERATION BODY X, radians per second)

							(E:ABSOLUTE TIME, seconds) 1 % (A:ANIMATION DELTA TIME, seconds) &lt;= if{
								(A:FOLDING WING RIGHT PERCENT, meters per second) 0.5 * 0.1 max (&gt;A:FOLDING WING RIGHT PERCENT, meters per second)
							}
						}
						
						(A:INTERACTIVE POINT OPEN, percent) s10
						(L:CANOPY_EJECT, percent) s11
						
						l10 0 &gt; l11 1 &lt; and if{
							(A:AIRSPEED TRUE, meters per second) 5 &gt; if{
								l10 10 (A:ANIMATION DELTA TIME, seconds) * (A:AIRSPEED TRUE, meters per second) * pi l10 * 400 / sin * - s10
								100 l10 min 0 max (&gt;A:INTERACTIVE POINT OPEN, percent)
							}
						}
						
						l11 0 &gt; l11 100 != and if{
							(A:AIRSPEED TRUE, meters per second) 20 &gt; (PLANE BANK DEGREES, degrees) abs 60 &gt; or (PLANE PITCH DEGREES, degrees) abs 60 &gt; or if{
								100 (&gt;L:CANOPY_EJECT, percent)
							}
						}						
					}
					
					(A:AIRSPEED TRUE, meters per second) (&gt;L:LAST AIRSPEED TRUE, meters per second)
					(A:PRESSURE ALTITUDE, meters) (&gt;L:LAST PRESSURE ALTITUDE, meters)
					
					(L:VARIO_TONE_ACTIVE, percent) 20 - s16
					
					(L:VARIO_POWER_STATUS, bool) l16 0 &gt; and if{
						(L:VARIO_NEEDLE, meters per second) 196.85 * (&gt;L:VARIO_TONE, feet per minute)
						(L:VARIO_NEEDLE, meters per second) 0.1 &gt; if{ l16 (A:AIRSPEED TRUE, meters per second) 5 / 1 min * } els{ 0 } (&gt;L:VARIO_TONE_LIFT, percent)
						(L:VARIO_NEEDLE, meters per second) -0.1 &lt; if{ l16 (A:AIRSPEED TRUE, meters per second) 5 / 1 min * } els{ 0 } (&gt;L:VARIO_TONE_SINK, percent)
					} els{
						0 (&gt;L:VARIO_TONE, feet per minute)
						0 (&gt;L:VARIO_TONE_LIFT, percent)
						0 (&gt;L:VARIO_TONE_SINK, percent)
					}
				
					(A:TOTAL VELOCITY, meters per second) (&gt;L:LAST VELOCITY, meters per second)
						
						
					(A:BRAKE PARKING POSITION, percent) 0 &gt; if{ 0 (&gt;K:PARKING_BRAKES) }
					(A:BRAKE RIGHT POSITION, percent) 100 == if{ 1 (&gt;K:PARKING_BRAKES) }
					
					(A:SPOILERS HANDLE POSITION, percent) (A:BRAKE RIGHT POSITION, percent) - s33
					l33 10 &gt; l33 -10 &lt; or if{
						(A:SPOILERS HANDLE POSITION, percent) (&gt;A:BRAKE RIGHT POSITION, percent)
					}
					
					(A:FOLDING WING RIGHT PERCENT, meters per second) (A:AMBIENT WIND Y, meters per second) + (&gt;L:VERTICAL WIND, meters per second)

					(L:CANOPY_OPEN, bool) if{
						0 (&gt;L:CANOPY_OPEN, bool)
						100 (&gt;A:INTERACTIVE POINT OPEN, percent)
						100 (&gt;A:INTERACTIVE POINT GOAL, percent)
					}
					
					(A:CAMERA VIEW TYPE AND INDEX, number) 1 != (A:CAMERA VIEW TYPE AND INDEX, number) 2 != and (A:CAMERA VIEW TYPE AND INDEX, number) 3 != and if{
						100
					} els{
						10
						(L:SLIDING_WINDOW, percent) 10 / +
						(A:INTERACTIVE POINT OPEN, percent) 2 / (L:CANOPY_EJECT, percent) max +
					}
					s34
					
					l34
					(A:TOTAL VELOCITY, knots) 150 / 1.25 pow *
					100 min
					(&gt;L:WIND_SOUND, percent)
					
					l34
					(A:ENG N1 RPM:1, percent over 100) (A:GENERAL ENG PCT MAX RPM:1, percent over 100) min *
					100 min
					(&gt;L:ENG_SOUND, percent)
					
					(L:CANOPY_EJECT, percent) 10 &gt; (A:INTERACTIVE POINT GOAL, percent) 100 != and if{
						100 (&gt;A:INTERACTIVE POINT GOAL, percent)
					}
					
					(A:ELECTRICAL MASTER BATTERY, bool) if{
						(L:AUTO_PILOT_BANK, radians) 0 != if{
							(A:PLANE PITCH DEGREES, radians) (A:ROTATION VELOCITY BODY X, radians per second) 10 / + 0.05 + (&gt;A:ELEVATOR TRIM POSITION, number)
							(A:PLANE BANK DEGREES, radians) (A:ROTATION VELOCITY BODY Z, radians per second) + (L:AUTO_PILOT_BANK, radians) - 250 * (&gt;A:AILERON TRIM PCT, percent)
						}
						
						(L:AUTO_PILOT_COURSE, degrees) 0 != if{
							(L:AUTO_PILOT_COURSE, degrees) (A:PLANE HEADING DEGREES TRUE, degrees) - s1
							l1 180 &gt;= if{ l1 180 - s1 }
							l1 (&gt;L:AUTO_PILOT_COURSE_DIFF, degrees)
						
							(A:PLANE PITCH DEGREES, radians) (A:ROTATON VELOCITY BODY X, radians per second) + 0.05 + (&gt;A:ELEVATOR TRIM POSITION, number)
							(A:PLANE BANK DEGREES, radians) (A:ROTATON VELOCITY BODY Y, radians per second) + 250 * l1 10 * 20 min -20 max + (&gt;A:AILERON TRIM PCT, percent)
						}
					}
					
					(L:NAV_SCREEN, bool) (A:AVIONICS MASTER SWITCH, bool) != if{
						(L:NAV_SCREEN, bool) (&gt;K:AVIONICS_MASTER_SET)
					}
				</UPDATE_CODE>
			</UseTemplate>
		</Component>
		
		<Component ID="Custom_code2">
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>5</FREQUENCY>
				<UPDATE_CODE>
					(A:LIGHT POTENTIOMETER:15, percent) 0 != (A:LIGHT RECOGNITION, Bool) != if{
						(A:LIGHT POTENTIOMETER:15, percent) 0 != (&gt;A:LIGHT RECOGNITION, Bool)
					}
					
					(A:LIGHT POTENTIOMETER:15, percent) 0 != (A:PAYLOAD STATION WEIGHT:6, pounds) 1 &lt; and if{
						0 (&gt;K:15:LIGHT_POTENTIOMETER_SET)
					}	

					(A:FUEL DUMP ACTIVE, bool) (A:LIGHT PEDESTRAL:1, bool) != if{
						(A:FUEL DUMP ACTIVE, bool) (&gt;A:LIGHT PEDESTRAL:1, bool)
					}
				</UPDATE_CODE>
			</UseTemplate>
		</Component>
		
		
		<Component ID="Canopy_SW">
			<UseTemplate Name="ASOBO_GT_Anim">
				<ANIM_NAME>f_canopy</ANIM_NAME>
				<ANIM_CODE>(A:INTERACTIVE POINT OPEN, Percent)</ANIM_CODE>
				<ANIM_LAG>100</ANIM_LAG>
			</UseTemplate>
			<UseTemplate Name="ASOBO_GT_Anim">
				<ANIM_NAME>lever_canopy_open</ANIM_NAME>
				<ANIM_CODE>(A:INTERACTIVE POINT OPEN, bool) 100 *</ANIM_CODE>
				<ANIM_LAG>200</ANIM_LAG>
			</UseTemplate>
			<UseTemplate Name="ASOBO_AIRCRAFT_Lever_Exit_0_Template">
				<NODE_ID>lever_canopy_open</NODE_ID>
				<PART_ID>lever_canopy_open</PART_ID>
			</UseTemplate>
		</Component>			
	
		<Component ID="VWIND_1" Node="VWIND_1">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) 0.5 &gt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_2" Node="VWIND_2">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) 1.5 &gt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_3" Node="VWIND_3">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) 2.5 &gt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_4" Node="VWIND_4">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) 3.5 &gt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_5" Node="VWIND_5">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) 4.5 &gt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_6" Node="VWIND_6">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) 5.5 &gt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_7" Node="VWIND_7">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) 6.5 &gt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_8" Node="VWIND_8">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) 7.5 &gt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_9" Node="VWIND_9">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) 8.5 &gt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_10" Node="VWIND_10">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) 9.5 &gt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>	

		<Component ID="VWIND_m1" Node="VWIND_m1">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) -0.5 &lt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_m2" Node="VWIND_m2">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) -1.5 &lt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_m3" Node="VWIND_m3">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) -2.5 &lt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_m4" Node="VWIND_m4">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) -3.5 &lt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_m5" Node="VWIND_m5">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) -4.5 &lt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_m6" Node="VWIND_m6">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) -5.5 &lt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_m7" Node="VWIND_m7">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) -6.5 &lt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_m8" Node="VWIND_m8">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) -7.5 &lt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_m9" Node="VWIND_m9">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) -8.5 &lt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>			
		<Component ID="VWIND_m10" Node="VWIND_m10">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:VERTICAL WIND, meters per second) -9.5 &lt; (L:WINDSTRING_TOGGLE, bool) ! and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>	
		
		<Component ID="_ANIM">
			<UseTemplate Name="ASOBO_GT_Anim_Code">
				<ANIM_NAME></ANIM_NAME>
				<ANIM_LENGTH>100</ANIM_LENGTH>
				<ANIM_CODE>

				</ANIM_CODE>
				<ANIM_LAG>100</ANIM_LAG>
			</UseTemplate>
		</Component>
		
		<Component ID="EMISSIVE_ENGINE">
			<UseTemplate Name="ASOBO_SAFETY_Indicator_Template">
				<NODE_ID>ENG_BUTTON_LIGHT</NODE_ID>
				<EMISSIVE_CODE>(E:ABSOLUTE TIME, seconds) 2 % 1 &gt; (A:GENERAL ENG STARTER:1, percent) 0 != and (A:FUEL TANK CENTER LEVEL, percent) 1 &gt; and (A:ENG COMBUSTION:1, percent) 0 != or </EMISSIVE_CODE>
			</UseTemplate>
		</Component>
		
		<Component ID="AUTOPILOT_BANK" Node="CIRCLE_BUTTON">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>CIRCLE_BUTTON</ANIM_NAME>
				<ANIM_CODE>(L:AUTO_PILOT_BANK, radians) 0 != 100 *</ANIM_CODE>
				<ANIM_LAG>200</ANIM_LAG>
				<ANIMTIP_0>HOLD BANK</ANIMTIP_0>
				<ANIMTIP_1>HOLD BANK</ANIMTIP_1>
				<LEFT_SINGLE_CODE>
					(L:AUTO_PILOT_BANK, radians) 0 != if{
						0 (&gt;L:AUTO_PILOT_BANK, radians)
						(L:AILERON TRIM PCT, percent) (&gt;A:AILERON TRIM PCT, percent)
						(L:ELEVATOR TRIM POSITION, number) (&gt;A:ELEVATOR TRIM POSITION, number)
					} els{
						0 (&gt;L:AUTO_PILOT_COURSE, degrees)
						(A:PLANE BANK DEGREES, radians) (&gt;L:AUTO_PILOT_BANK, radians)
						(A:AILERON TRIM PCT, percent) (&gt;L:AILERON TRIM PCT, percent)
						(A:ELEVATOR TRIM POSITION, number) (&gt;L:ELEVATOR TRIM POSITION, number)
					}
				</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>
		<Component ID="EMISSIVE_CIRCLE">
			<UseTemplate Name="ASOBO_SAFETY_Indicator_Template">
				<NODE_ID>CIRCLE_BUTTON_LIGHT</NODE_ID>
				<EMISSIVE_CODE>(L:AUTO_PILOT_BANK, radians) 0 !=</EMISSIVE_CODE>
			</UseTemplate>
		</Component>
		
		<Component ID="AUTOPILOT_COURSE" Node="FWD_BUTTON">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>FWD_BUTTON</ANIM_NAME>
				<ANIM_CODE>(L:AUTO_PILOT_COURSE, degrees) 0 != 100 *</ANIM_CODE>
				<ANIM_LAG>200</ANIM_LAG>
				<ANIMTIP_0>HOLD COURSE</ANIMTIP_0>
				<ANIMTIP_1>HOLD COURSE</ANIMTIP_1>
				<LEFT_SINGLE_CODE>
					(L:AUTO_PILOT_COURSE, degrees) 0 != if{
						0 (&gt;L:AUTO_PILOT_COURSE, degrees)
						(L:AILERON TRIM PCT, percent) (&gt;A:AILERON TRIM PCT, percent)
						(L:ELEVATOR TRIM POSITION, number) (&gt;A:ELEVATOR TRIM POSITION, number)
					} els{
						0 (&gt;L:AUTO_PILOT_BANK, radians)
						(A:PLANE HEADING DEGREES TRUE, degrees) (&gt;L:AUTO_PILOT_COURSE, degrees)
						(A:AILERON TRIM PCT, percent) (&gt;L:AILERON TRIM PCT, percent)
						(A:ELEVATOR TRIM POSITION, number) (&gt;L:ELEVATOR TRIM POSITION, number)
					}
				</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>
		<Component ID="EMISSIVE_FWD">
			<UseTemplate Name="ASOBO_SAFETY_Indicator_Template">
				<NODE_ID>FWD_BUTTON_LIGHT</NODE_ID>
				<EMISSIVE_CODE>(L:AUTO_PILOT_COURSE, degrees) 0 !=</EMISSIVE_CODE>
			</UseTemplate>
		</Component>
		
		<Component ID="EMISSIVE_GEAR">
			<UseTemplate Name="ASOBO_SAFETY_Indicator_Template">
				<NODE_ID>GEAR_BUTTON_LIGHT</NODE_ID>
				<EMISSIVE_CODE>(A:GEAR IS ON GROUND:0, bool) (E:ABSOLUTE TIME, seconds) 2 % 1 &gt; or (A:GEAR TOTAL PCT EXTENDED:0, bool) 0 != and</EMISSIVE_CODE>
			</UseTemplate>
		</Component>
		
		<Component ID="ENG_BUTTON" Node="ENG_BUTTON">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>ENG_BUTTON</ANIM_NAME>
				<ANIM_CODE>(A:ENG COMBUSTION:1, percent)</ANIM_CODE>
				<ANIM_LAG>200</ANIM_LAG>
				<TOOLTIPID>TOOLTIPTEXT_ENGINE_PERCENT_RPM</TOOLTIPID>
				<LEFT_SINGLE_CODE>
					(A:ENG COMBUSTION:1, percent) 0 != if{ (&gt;K:ENGINE_AUTO_SHUTDOWN) } els{ (&gt;K:ENGINE_AUTO_START) }
				</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>		
  
		<Component ID="CANOPY_WINDOW" Node="CanopyWindow_INT">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>CanopyWindow</ANIM_NAME>
				<ANIM_CODE>(L:SLIDING_WINDOW, percent)</ANIM_CODE>
				<ANIM_LAG>200</ANIM_LAG>
				<TOOLTIPID>Fresh air</TOOLTIPID>
				<LEFT_SINGLE_CODE>
					(L:SLIDING_WINDOW, percent) 100 &lt; if{ 100 (&gt;L:SLIDING_WINDOW, percent) } els{ 0 (&gt;L:SLIDING_WINDOW, percent)
				</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>		

  	</Behaviors>
	
  <Animation name="NATHAN" guid="ef2c446d-306f-4cc4-9e80-773e571cb979" typeparam2="NATHAN" typeparam="AutoPlay" length="100" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
    <Name>NATHAN</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
			0
        </Code>
      </Parameter>
    </Animation>
    <Visibility>
      <Parameter>
        <Code>
            (L:PILOT_TOGGLE, bool) 0 != (A:CAMERA VIEW TYPE AND INDEX, number) 1 != (A:CAMERA VIEW TYPE AND INDEX, number) 2 != and (A:CAMERA VIEW TYPE AND INDEX, number) 3 != and or
          </Code>
      </Parameter>
    </Visibility>
  </PartInfo>
  
  <Animation name="rp_nathan_animated_003_walking_neck" guid="941f342a-fb9c-4115-822c-ad120c78852b" typeparam2="rp_nathan_animated_003_walking_neck" typeparam="AutoPlay" length="100" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
    <Name>rp_nathan_animated_003_walking_neck</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
          (A:CAMERA VIEW TYPE AND INDEX, number) 1 == (A:CAMERA VIEW TYPE AND INDEX, number) 2 == or (A:CAMERA VIEW TYPE AND INDEX, number) 3 == or 100 *
        </Code>
      </Parameter>
    </Animation>
  </PartInfo>  



  
  <Animation name="ThemperatureStripe" guid="5c7830fa-6f05-416a-a206-9ec498261681" typeParam2="ThemperatureStripe" length="100" type="Sim" typeParam="AutoPlay" />
  <Animation name="ThemperatureStripeImperial" guid="519d1f9b-be17-4512-969a-8a0c23e9f534" typeParam2="ThemperatureStripeImperial" length="100" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
    <Name>ThemperatureStripe</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>(A:AMBIENT TEMPERATURE, celsius) 40 + 1.111 *</Code>
		<Lag>1</Lag>
      </Parameter>
    </Animation>
    <Visibility>
      <Parameter>
        <Code>
            (L:UNITS_IMPERIAL, percent) 100 !=
          </Code>
      </Parameter>
    </Visibility>
  </PartInfo>
  
  <PartInfo>
    <Name>ThemperatureStripeImperial</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>(A:AMBIENT TEMPERATURE, celsius) 40 + 1.111 *</Code>
		<Lag>1</Lag>
      </Parameter>
    </Animation>
    <Visibility>
      <Parameter>
        <Code>
            (L:UNITS_IMPERIAL, percent) 100 ==
          </Code>
      </Parameter>
    </Visibility>
  </PartInfo>
  
  <Animation name="BankBall" guid="3312e0ee-8a8e-4844-8fe5-58946a80618e" typeParam2="BankBall" length="100" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
    <Name>BankBall</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
		<Code>(A:TURN COORDINATOR BALL, percent) 2 / 50 + (A:ROTATION VELOCITY BODY Y, degrees per second) 2 * - </Code>
		<Lag>25</Lag>
      </Parameter>
    </Animation>
  </PartInfo>  

  <Animation name="CompassBallHeading" guid="54804247-360e-4043-96bb-0e9f8ed5ef10" typeParam2="CompassBallHeading" length="100" type="Sim" typeParam="AutoPlay" />
  <Animation name="CompassBallPitch" guid="9dafd3e2-a19e-470f-ac35-bba97a69291d" typeParam2="CompassBallPitch" length="100" type="Sim" typeParam="AutoPlay" />
  <Animation name="CompassBallRoll" guid="29a227d7-200d-47db-9f0b-1d55e73256de" typeParam2="CompassBallRoll" length="100" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
    <Name>CompassBallHeading</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>(A:WISKEY COMPASS INDICATION DEGREES, degree) 3.6 /</Code>
      </Parameter>
    </Animation>
  </PartInfo>  

  <PartInfo>
    <Name>CompassBallPitch</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>(A:PLANE PITCH DEGREES, Degrees) 5 * 50 +</Code>
		<Lag>200</Lag>
      </Parameter>
    </Animation>
  </PartInfo>  

  <PartInfo>
    <Name>CompassBallRoll</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>(A:PLANE BANK DEGREES, Degrees) 5 * 50 +</Code>
		<Lag>200</Lag>
      </Parameter>
    </Animation>
  </PartInfo>  
    
  <Animation name="ASI_needle" guid="6e22c690-e9e8-4587-bbb4-09f7e93e8f23" length="100" type="Sim" typeparam2="ASI_needle" typeparam="AutoPlay" />
  <Animation name="BARO_hundred_needle" guid="83819713-a163-4a5d-89cc-082f15d52be8" length="100" type="Sim" typeparam2="BARO_hundred_needle" typeparam="AutoPlay" />
  <Animation name="BARO_thousand_needle" guid="03d23294-8e82-4f65-bb59-327b8b5c09a1" length="100" type="Sim" typeparam2="BARO_thousand_needle" typeparam="AutoPlay" />
  <Animation name="BARO_ten_thousand_needle" guid="e789c5ef-2d61-4fc8-ac93-92d269efcdcb" length="100" type="Sim" typeparam2="BARO_ten_thousand_needle" typeparam="AutoPlay" />
  <Animation name="BARO_ten_thousand_needleImperial" guid="1d6cf3a1-759d-4260-82c6-327529679330" length="100" type="Sim" typeparam2="BARO_ten_thousand_needleImperial" typeparam="AutoPlay" />
  <Animation name="BaroDisc" guid="8ec51bcf-61c2-46a2-9d1c-3cb4792aac0d" length="100" type="Sim" typeparam2="BaroDisc" typeparam="AutoPlay" />
  <PartInfo>
    <Name>ASI_needle</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Sim>
          <Variable>AIRSPEED INDICATED</Variable>
          <Units>kilometers per hour</Units>
          <Scale>0.1</Scale>
          <Lag>50</Lag>
        </Sim>
      </Parameter>
    </Animation>
  </PartInfo>  
  
  <PartInfo>
    <Name>BARO_hundred_needle</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
          (L:UNITS_IMPERIAL, percent) 100 != if{ (A:INDICATED ALTITUDE, meters) } els{ (A:INDICATED ALTITUDE, feet) 10 / } 1 / 100 %
        </Code>
      </Parameter>
    </Animation>
  </PartInfo>  
  
  <PartInfo>
    <Name>BARO_thousand_needle</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
          (L:UNITS_IMPERIAL, percent) 100 != if{ (A:INDICATED ALTITUDE, meters) } els{ (A:INDICATED ALTITUDE, feet) 10 / } 10 / 100 %
        </Code>
      </Parameter>
    </Animation>
  </PartInfo>  

  <PartInfo>
    <Name>BARO_ten_thousand_needle</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
          (A:INDICATED ALTITUDE, meters) 100 / 100 %
        </Code>
      </Parameter>
    </Animation>
  </PartInfo>  
  
  <PartInfo>
    <Name>BARO_ten_thousand_needleImperial</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
          (A:INDICATED ALTITUDE, feet) 1000 / 100 %
        </Code>
      </Parameter>
    </Animation>
  </PartInfo>
  
  <PartInfo>
    <Name>BaroDisc</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
          (A:KOHLSMAN SETTING HG, inch of mercury) 28.1 - 2.9 / 100 *
        </Code>
      </Parameter>
    </Animation>
  </PartInfo>  
    
  <Animation name="lever_trimtab_elevator_key" guid="08690f3b-878c-4df4-afd6-47fe18ff3719" typeParam2="lever_trimtab_elevator_key" length="100" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
    <Name>lever_trimtab_elevator_key</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Sim>
          <Variable>ELEVATOR TRIM PCT</Variable>
          <Units>percent</Units>
          <Scale>0.5</Scale>
          <Bias>50</Bias>
        </Sim>
      </Parameter>
    </Animation>
	
    <MouseRect>
      <TooltipText>Elevator trim %((A:ELEVATOR TRIM POSITION, degree) int)%!s!&#730; (LMB - reset)</TooltipText>
      <Cursor>Grab</Cursor>
      <MouseFlags>LeftSingle+WheelUp+WheelDown</MouseFlags>
      <CallbackCode>
        (M:Event) 'LeftSingle' scmp 0 ==
        if{ 0 (&gt;A:ELEVATOR TRIM POSITION, degree) } }
        (M:Event) 'WheelDown' scmp 0 ==
        if{ (A:ELEVATOR TRIM POSITION, degree) 1 + (&gt;A:ELEVATOR TRIM POSITION, degree) }
        (M:Event) 'WheelUp' scmp 0 ==
        if{ (A:ELEVATOR TRIM POSITION, degree) 1 - (&gt;A:ELEVATOR TRIM POSITION, degree) }
      </CallbackCode>
    </MouseRect>

  </PartInfo>
  
  <Animation name="YAWSTRING" guid="7c626a1e-7801-4bbe-8234-bdc3b133931a" typeparam2="YAWSTRING" typeparam="AutoPlay" length="100" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
    <Name>YAWSTRING</Name>
    <Visibility>
      <Parameter>
        <Code>
            (L:YAWSTRING_TOGGLE, bool) !
          </Code>
      </Parameter>
    </Visibility>
  </PartInfo>

  <!-- COMMON -->

  <Animation name="VarioNettoNeedle" guid="36ef1d8e-a31d-4556-ac29-49a34277fc84" typeParam2="VarioNettoNeedle" length="100" type="Sim" typeParam="AutoPlay" />
  <Animation name="VarioSinkNeedle" guid="98517f9a-a858-4564-ba7e-9e6c9a314fae" typeParam2="VarioSinkNeedle" length="100" type="Sim" typeParam="AutoPlay" />
  <PartInfo>
    <Name>VarioNettoNeedle</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
			(L:VARIO_TONE_ACTIVE,percent) 0 == if{ 50 } els{
				(L:VARIO_MODE, percent) 100 != if{ (L:NETTO, meters per second) } els{ (L:TOTAL ENERGY, meters per second) }
				5 * (L:UNITS_IMPERIAL, percent) 100 != if{ 1 } els{ 0.97192 } * 50 + 
			}
		</Code>
        <Lag>100</Lag>
      </Parameter>
    </Animation>
  </PartInfo>  

  <PartInfo>
    <Name>VarioSinkNeedle</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>(A:VERTICAL SPEED, meters per second) 5 * (L:UNITS_IMPERIAL, percent) 100 != if{ 1 } els{ 0.97192 } * 50 + </Code>
        <Lag>100</Lag>
      </Parameter>
    </Animation>
  </PartInfo>  

  <Animation name="lever_pedals_l_r" guid="ae66f59b-b19e-4a7f-9e95-6b1073503e1b" typeParam2="lever_pedals_l_r" length="100" type="Sim" typeParam="AutoPlay" />
  <Animation name="lever_tow_release" guid="6B558BE8-78BD-417d-9701-080776A70D6A" typeParam2="lever_tow_release" length="100" type="Sim" typeParam="AutoPlay" />

  <Animation name="FrontPanelGaugesMetric" guid="c6ffcbf4-130c-4279-bf19-17b12bb56691" typeParam2="FrontPanelGaugesMetric" length="100" type="Sim" typeParam="AutoPlay" />
  <Animation name="FrontPanelGaugesImperial" guid="88d203cf-f37c-4357-ac4e-efae2c66188b" typeParam2="FrontPanelGaugesImperial" length="100" type="Sim" typeParam="AutoPlay" />
  
  <Animation name="CanopyEjectRoot" guid="5c11bf40-829d-4a7c-88f3-152f2e838bfb" typeparam2="CanopyEjectRoot" typeparam="AutoPlay" length="100" type="Sim" typeParam="AutoPlay" />
  <Animation name="lever_canopy_eject" guid="bf43a791-2d27-4aeb-9ec8-1b58c1452f82" typeparam2="lever_canopy_eject" typeparam="AutoPlay" length="100" type="Sim" typeParam="AutoPlay" />

  <Animation name="yawstring_1" guid="0f15b043-569a-4e39-b646-156d201dce27" typeParam2="yawstring_1" length="100" type="Sim" typeParam="AutoPlay" />
  <Animation name="yawstring_2" guid="cd3ee942-becf-4724-99f8-e135d12244fa" typeParam2="yawstring_2" length="100" type="Sim" typeParam="AutoPlay" />
  <Animation name="yawstring_3" guid="5b9e26f0-fe46-4b32-b1ed-607d4009eb9c" typeParam2="yawstring_3" length="100" type="Sim" typeParam="AutoPlay" />
  
  <Animation name="CanopyWindow" guid="43b4b7dd-7c86-404e-9dd7-ac64ba65f731" typeParam2="CanopyWindow" length="100" type="Sim" typeParam="AutoPlay" />

  <Animation name="HAND_R_FA" guid="3cfb0596-5a10-4085-82a0-cf73d840e331" typeparam2="HAND_R_FA" typeparam="AutoPlay" length="100" type="Sim" typeParam="AutoPlay" />
  <Animation name="HAND_R_LR" guid="0f7ee961-fe7f-43d2-b684-52261a2b50fc" typeparam2="HAND_R_LR" typeparam="AutoPlay" length="100" type="Sim" typeParam="AutoPlay" />
  
  <Animation name="HAND_L" guid="87c0ef38-9b90-4a45-82d7-c17e59c52846" typeparam2="HAND_L" typeparam="AutoPlay" length="100" type="Sim" typeParam="AutoPlay" />
  
  <Animation name="rp_nathan_animated_003_walking_head" guid="9a6cfa9a-d2f1-45da-be49-2d243125962d" typeparam2="rp_nathan_animated_003_walking_head" typeparam="AutoPlay" length="100" type="Sim" typeParam="AutoPlay" />

  
<!--  <PartInfo>
    <Name>switch_master_battery</Name>
    <MouseRect>
      <Cursor>Hand</Cursor>
      <HelpID>HELPID_GAUGE_BATTERY_SWITCH</HelpID>
      <TooltipID>TOOLTIPTEXT_BATTERY_SWITCH</TooltipID>
      <EventID>TOGGLE_MASTER_BATTERY</EventID>
    </MouseRect>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Sim>
          <Variable>ELECTRICAL MASTER BATTERY</Variable>
          <Units>bool</Units>
          <Scale>100</Scale>
          <Bias>0</Bias>
        </Sim>
        <Lag>1000</Lag>
      </Parameter>
    </Animation>
  </PartInfo>-->
  
 
  <PartInfo>
    <Name>rp_nathan_animated_003_walking_head</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
          (A:YOKE X POSITION,percent) 4 / - (A:RUDDER POSITION,percent) 4 / -
		  (E:ABSOLUTE TIME, seconds) 36 % 38 &gt;= 25 * +
		  (E:ABSOLUTE TIME, seconds) 46 % 48 &gt;= 25 * -
		  50 +
        </Code>
		<Lag>50</Lag>
      </Parameter>
    </Animation>
  </PartInfo>  
  
  <PartInfo>
    <Name>lever_pedals_l_r</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
			(A:RUDDER PEDAL POSITION,percent) 100 + 2 / 
			(A:TURN COORDINATOR BALL, percent) 2 / (A:ROTATION VELOCITY BODY Y, degrees per second) 2 * - -20 max 20 min 2 / -
		</Code>	  
        <Lag>500</Lag>
      </Parameter>
    </Animation>
  </PartInfo>

  <PartInfo>
    <Name>CanopyEjectRoot</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
          (L:CANOPY_EJECT,percent)
        </Code>
		<Lag>10</Lag>
      </Parameter>
    </Animation>
	
    <!--<Visibility>
      <Parameter>
        <Code>
            (L:CANOPY_EJECT,percent) 100 &lt;
          </Code>
      </Parameter>
    </Visibility>-->
  </PartInfo>
  
  <PartInfo>
    <Name>yawstring_1</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
			(L:SIM_ACTIVE, bool) if{

				(A:TOTAL WORLD VELOCITY, knots) 5 &lt; if{
						(A:AMBIENT WIND VELOCITY, knots)
						
						s0
						
						(&gt;L:FINAL_WIND_MAGNITUDE, knots)

						(A:PLANE HEADING DEGREES TRUE, degrees) (A:AMBIENT WIND DIRECTION, degrees) - s1
						l1 -180 &lt; if{ l1 360 + }
						l1 180 &gt; if{ l1 360 - }
						
						s2
						
						(A:INTERACTIVE POINT OPEN, percent) 0 &gt; if{
							l2 0 &lt; if{ -1 } els{ 1 }
							0.5 * 10 (A:INTERACTIVE POINT OPEN, percent) + * +
						}
						
						180 min -180 max
						s2
						
						l2 (L:FINAL_WIND_DIRECTION, degrees) - -10 l0 + 4 * &lt;  
						l2 (L:FINAL_WIND_DIRECTION, degrees) - 10 l0 - 4 * &gt;  or
						if{ 
							(&gt;L:FINAL_WIND_DIRECTION, degrees)
						}
				} els{
						(A:RELATIVE WIND VELOCITY BODY X, knots) 2 pow
						(A:RELATIVE WIND VELOCITY BODY Y, knots) 2 pow +
						(A:RELATIVE WIND VELOCITY BODY Z, knots) 2 pow +
						0.5 pow
						
						s0
						
						(&gt;L:FINAL_WIND_MAGNITUDE, knots)
						
						(A:RELATIVE WIND VELOCITY BODY X, knots) l0 /
						(A:RELATIVE WIND VELOCITY BODY Z, knots) l0 /
						atg2 3.1416 / -180 * 
						-180 max 180 min
						
						s2
						
						(&gt;L:FINAL_WIND_DIRECTION, degrees)
				}
			}
		
			(L:FINAL_WIND_DIRECTION, degrees) 3.6 / 50 +
		</Code>
        <Lag>100</Lag>
      </Parameter>
    </Animation>
  </PartInfo>  
  <PartInfo>
    <Name>yawstring_2</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
			(L:FINAL_WIND_MAGNITUDE, meters per second) 2 *
			100 min 0 max
			(L:FINAL_WIND_MAGNITUDE, meters per second) 20 * 1 % 0.5 - *

			1 (L:FINAL_WIND_MAGNITUDE, meters per second) 150 / -
			0 max 1 min 2 pow *
			
			(A:TOTAL WORLD VELOCITY, knots) 5 &lt; if{ (L:FINAL_WIND_DIRECTION, degrees) 3.6 / 5 (A:TOTAL WORLD VELOCITY, knots) - * + }

			50 +
		</Code>
        <Lag>50</Lag>
      </Parameter>
    </Animation>
  </PartInfo>  
  <PartInfo>
    <Name>yawstring_3</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
			(L:FINAL_WIND_MAGNITUDE, meters per second) 25 - 2 *
			100 min 0 max
			(L:FINAL_WIND_MAGNITUDE, meters per second) 30 * 1 % 0.5 - *

			(L:FINAL_WIND_MAGNITUDE, meters per second) 25 - 50 /
			0 max 1 min *

			(A:TOTAL WORLD VELOCITY, knots) 5 &lt; if{ (L:FINAL_WIND_DIRECTION, degrees) 3.6 / 5 (A:TOTAL WORLD VELOCITY, knots) - * + }

			50 +
		</Code>
        <Lag>200</Lag>
      </Parameter>
    </Animation>
  </PartInfo>  

  <PartInfo>
    <Name>FrontPanelGaugesMetric</Name>
    <AnimLength>100</AnimLength>
    <Visibility>
      <Parameter>
        <Code>
            (L:UNITS_IMPERIAL, percent) 100 !=
          </Code>
      </Parameter>
    </Visibility>
    <Animation>
      <Parameter>
        <Code>
            (L:UNITS_IMPERIAL, percent) 50 - 2 *
        </Code>
      </Parameter>
    </Animation>
  </PartInfo>

  <PartInfo>
    <Name>FrontPanelGaugesImperial</Name>
    <AnimLength>100</AnimLength>
    <Visibility>
      <Parameter>
        <Code>
            (L:UNITS_IMPERIAL, percent) 100 ==
          </Code>
      </Parameter>
    </Visibility>
    <Animation>
      <Parameter>
        <Code>
            1 (L:UNITS_IMPERIAL, percent) 50 - 2 * -
          </Code>
      </Parameter>
    </Animation>
  </PartInfo>

  <PartInfo>
    <Name>HAND_L</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
            50 (L:THUMB_ANIM, meters) +
        </Code>
		<lag>50</lag>
      </Parameter>
    </Animation>
  </PartInfo>
  
  <PartInfo>
    <Name>HAND_R_FA</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
          (A:YOKE Y POSITION,percent) 2 / 50 +
        </Code>
      </Parameter>
    </Animation>	
  </PartInfo>

  <PartInfo>
    <Name>HAND_R_LR</Name>
    <AnimLength>100</AnimLength>
    <Animation>
      <Parameter>
        <Code>
          (A:YOKE X POSITION,percent) 2 / 50 + (A:YOKE X POSITION,percent) 0 &gt; if{ 0 (A:YOKE Y POSITION,percent) - 100 + 10 / (A:YOKE X POSITION,percent) 100 / * } els{ 0 } -
        </Code>
      </Parameter>
    </Animation>	
  </PartInfo>

  
</ModelInfo>
